script.
  // CATCH ANY ERRORS!
  var onErr = (err) => {
    if(global.packageInfo.updateAvailable) {
      $("#not-latest-stable").show();
      if (global.packageInfo.isSnap) {
        $("#snap-update-instructions-error").show();
      } else {
        $("#generic-update-instructions-error").show();
      }
    }
    $("#error-body").text(err);
    $("#error-modal").modal("show");
    $("#password-modal").modal("hide");
  }

  window.onerror = (err, url, line) => {
    onErr(err+" (MainRenderer:"+line+")");
  }

  ipcRenderer.on("user:password", () => {
    modals.show("password");
    $("#password-input").val("");
    $("#password-input").keypress((event) => {
      if (event.which == '13') {
        event.preventDefault();
        ipcRenderer.send("password", $("#password-input").val());
        modals.hide("password");
        $('#password-wrong').hide();
      }
    });
    $("#btn-password").click(() => {
      ipcRenderer.send("password", $("#password-input").val());
      $('#password-wrong').hide();
    });
  });

  ipcRenderer.on("user:password:wrong", () => {
    ipcRenderer.send("user:password");
    $('#password-wrong').show();
  });

  ipcRenderer.on("user:error", (event, err) => { onErr(err); });

  ipcRenderer.on("user:write:working", (e, animation) => {
    views.show("working", animation);
  });

  ipcRenderer.on("user:connection-lost", (e, callback) => {
    modals.show("connection-lost");
    $("#btn-reconnect").click(callback);
  });

  ipcRenderer.on("user:low-power", (callback) => {
    modals.show("low-power");
  });

  var ignoreError = () => {
    ipcRenderer.send('error_ignored');
  }

  var restartInstaller = () => {
    ipcRenderer.send('restart');
  }

  ipcRenderer.on("user:oem-lock", (event) => {
    modals.show('oem-lock');
    $("#btn-unlock").click(() => {
      event.sender.send("user:oem-lock:ok");
      modals.hide('oem-lock');
      $("#btn-unlock").attr("disabled", true);
      $("#btn-exit").attr("disabled", true);
      $("#unlock-prog").removeClass("hidden");
    });
  });

  ipcRenderer.on("user:reboot", (e, i) => {
    views.show("reboot-" + i.button);
    $("[id=reboot-to-state]").text(i.state);
    $("#complex-reboot-instruction").text(i.instruction);
  });

  ipcRenderer.on("adb:rebooted", () => {
    $('#views-reboot-up').hide();
    $('#views-reboot-down').hide();
  });

  ipcRenderer.on("reboot:done", () => {
    views.show("working", "particles");
    $('#views-reboot-up').hide();
    $('#views-reboot-down').hide();
  });

  ipcRenderer.on("user:no-network", () => {
    modals.show('no-network');
  });

  ipcRenderer.on("user:write:speed", (e, speed) => {
    footer.speedText.set(speed);
  });

  ipcRenderer.on("user:write:progress", (e, length) => {
    if(length >= 100) {
      length=100;
    }
    $("#progress").width(length.toString()+"%");
  });

  ipcRenderer.on("user:write:done", () => {
    if (global.installProperties.cli) {
      remote.getCurrentWindow().close();
    } else {
      views.show("done");
      footer.topText.set("Installation complete!");
      footer.underText.set("It is now safe to unplug the device.");
      $("#progress").width("0%");
    }
  });

  ipcRenderer.on("user:write:status", (e, status) => {
    footer.topText.set(status, true)
  });

  ipcRenderer.on("user:write:under", (e, status) => {
    footer.underText.set(status, true)
  });

  ipcRenderer.on("user:device-unsupported", (event, device) => {
    footer.topText.set("Device not supported");
    footer.underText.set("The device " + device + " is not supported");
    $("[id=your-device]").text(device);
    views.show("not-supported");
    $("#btn-inst").hide();
  });

  ipcRenderer.on("device:select:data-ready", (event, output, device, channels, ubuntuCom, autoDetected, isLegacyAndroid) => {
    views.show("install");
    $("#options-channel").append(channels);
    options.optionsValToUser();
    modals.hide('select-device');
    $("#btn-inst").show();
    footer.topText.set(output.name);
    if (isLegacyAndroid && !ubuntuCom) {
      $("#legacy-android-note").show();
      modals.show("legacy-android");
    }
    if (autoDetected) {
      footer.underText.set("Are you ready for Ubuntu Touch on your " + output.name + "?");
    } else {
      footer.underText.set("Please connect your " + output.name + " with a USB cable.");
    }
    $("#your-ubp-device").text(output.name+" ("+output.device+")");
    $("#your-ubp-device").click(() => {
      shell.openExternal("https://devices.ubuntu-touch.io/device/"+output.device);
    });

    views.show(ubuntuCom ? "switch" : "install");

    $("#btn-installModal").click(() => {
      views.show("working", "particles");
      $("#progress").show();
      ipcRenderer.send("user:device:select", {
        device: output.device,
        channel: options.get("channel", true),
        wipe: options.get("wipe", true)
      });
    });
  });

  // START
  views.show("working", "particles");

  ipcRenderer.on("device:wait:device-selects-ready", (event, deviceSelects) => {
    $("#device-select").append(deviceSelects);
  });

  ipcRenderer.on("user:adb:ready", () => {
    footer.topText.set("Waiting for device", true);
    footer.underText.set("Please connect your device with a USB cable");
    views.show("wait-for-device");
    // Button to open device selector
    $("#btn-modal-select-device").click(() => {
      modals.show('select-device');
    });
    // Button to confirm device selection
    $("#btn-select-device").click(() => {
      var device = $("#device-select").find(":selected").attr("name");
      ipcRenderer.send("device:select", device);
    });
  });

  // Assign buttons
  modals.bind("options");
  // Initialize options modal
  options.init();
